buildscript {
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.18'
    }
}

plugins {
    // Apply the scala Plugin to add support for Scala.
    id 'scala'
    id "com.github.maiflai.scalatest" version "0.32"

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    id "com.google.protobuf" version "0.8.18"
    id "java"

    id 'maven-publish'
    id 'signing'
}

group 'cz.jkozlovsky'
version '1.0.0'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

sourceSets {
    test {
        proto {
            // In addition to the default 'src/test/proto'
            srcDir 'src/test/resources/proto'
        }
        java {
            srcDirs 'build/generated/source/proto/test/java'
        }
    }
}

dependencies {
    // Use Scala 2.13 in our library project
    implementation 'org.scala-lang:scala-library:2.12.15'

    implementation 'com.google.protobuf:protobuf-java:3.19.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // Use Scalatest for testing our library
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.scalatest:scalatest_2.12:3.2.9'
    testImplementation 'org.scalatestplus:junit-4-13_2.12:3.2.2.0'

    // Need scala-xml at test runtime
    testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.12:1.2.0'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
}

test {
    reports.html.required = false
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = rootProject.name
            from components.java
            artifact sourcesJar
            artifact javadocJar


            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = rootProject.name
                description = 'Fast Protobuf field extractor written in Scala. Its purpose is to read fast a given tag from serialized message without the need to deserialize whole message.'
                url = 'https://github.com/jirislav/scala-protobuf-extractor'
                packaging = 'jar'
                licenses {
                    license {
                        name = 'GNU General Public License v2.0'
                        url = 'https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html'
                    }
                }
                developers {
                    developer {
                        id = 'jirislav'
                        name = 'Jiří Kozlovský'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/jirislav/scala-protobuf-extractor.git'
                    developerConnection = 'scm:git:git@github.com:jirislav/scala-protobuf-extractor.git'
                    url = 'https://github.com/jirislav/scala-protobuf-extractor'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME")
                password findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
